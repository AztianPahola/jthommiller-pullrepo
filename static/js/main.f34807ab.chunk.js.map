{"version":3,"sources":["App.js","index.js"],"names":["Search","value","onChange","onSubmit","children","type","Button","onClick","className","Table","list","onDismiss","map","item","key","objectID","style","width","href","url","title","author","num_comments","points","App","props","state","results","searchKey","searchTerm","needsToSearchTopstories","bind","setSearchTopstories","fetchSearchTopstories","onSearchChange","onSearchSubmit","this","result","hits","page","oldHits","updatedHits","setState","fetch","then","response","json","event","target","preventDefault","id","filter","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f34807ab.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\n\nconst DEFAULT_QUERY = 'redux';\nconst DEFAULT_PAGE = 0;\nconst DEFAULT_HPP = '100';\n\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\nconst PARAM_HPP = 'hitsPerPage=';\n\nconst Search = ({ value, onChange, onSubmit, children }) =>\n  <form onSubmit={onSubmit}>\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n    <button type=\"submit\">\n      {children}\n    </button>\n  </form>\n\nconst Button = ({ onClick, className = '', children }) =>\n    <button onClick={onClick} className={className} type=\"button\" >\n      {children}\n    </button>\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nconst Table = ({ list, onDismiss }) =>\n  <div className=\"table\">\n    { list.map(item =>\n    <div key={item.objectID}  className=\"table-row\">\n      <span style={{ width: '40%' }}>\n        <a href={item.url}>{item.title}</a>\n      </span>\n      <span style={{ width: '30%' }}>\n        {item.author}\n      </span>\n      <span style={{ width: '10%' }}>\n        {item.num_comments}\n      </span>\n      <span style={{ width: '10%' }}>\n        {item.points}\n      </span>\n      <span style={{ width: '10%' }}>\n          <button\n            onClick={() => onDismiss(item.objectID)}\n            className=\"button-inline\"\n          >\n            Dismiss\n          </button>\n      </span>\n    </div>\n  )}\n  </div>\n\nTable.propTypes = {\n  list: PropTypes.array.isRequired,\n  onDismiss: PropTypes.func.isRequired,\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: DEFAULT_QUERY,\n    };\n    this.needsToSearchTopstories = this.needsToSearchTopstories.bind(this);\n    this.setSearchTopstories = this.setSearchTopstories.bind(this);\n    this.fetchSearchTopstories = this.fetchSearchTopstories.bind(this)\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n  needsToSearchTopstories(searchTerm) {\n    return !this.state.results[searchTerm];\n  }\n  setSearchTopstories(result) {\n    const { hits, page } = result;\n    const { searchKey, results } = this.state;\n    const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\n    const updatedHits = [ ...oldHits, ...hits ];\n    this.setState({ results: { ...results, [searchKey]: { hits: updatedHits, page } } })\n\n  }\n  fetchSearchTopstories(searchTerm, page) {\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\n        .then(response => response.json())\n        .then(result => this.setSearchTopstories(result));\n  }\n  componentDidMount() {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    this.fetchSearchTopstories(searchTerm);\n    this.fetchSearchTopstories(searchTerm, DEFAULT_PAGE);\n  }\n\n  onSearchChange(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n  onSearchSubmit(event) {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    if (this.needsToSearchTopstories(searchTerm)) {\n      this.fetchSearchTopstories(searchTerm, DEFAULT_PAGE);\n    }\n    event.preventDefault();\n  }\n  onDismiss(id) {\n    const { searchKey, results } = this.state;\n    const { hits, page } = results[searchKey];\n    const isNotId = item => item.objectID !== id;\n    const updatedHits = hits.filter(isNotId);\n    this.setState({ results: { ...results, [searchKey]: { hits: updatedHits, page } } });\n  }\n  render() {\n    const { searchTerm, results, searchKey} = this.state;\n    const page = ( results && results[searchKey] && results[searchKey].page ) || 0;\n    const list = ( results && results[searchKey] && results[searchKey].hits ) || [];\n    return (\n        <div className=\"page\">\n          <div className=\"interactions\">\n            <Search\n              value={searchTerm}\n              onChange={this.onSearchChange}\n              onSubmit={this.onSearchSubmit}\n            >\n              Search\n            </Search>\n          </div>\n           <Table\n              list={list}\n              onDismiss={this.onDismiss}\n            />\n          }\n          <div className=\"interactions\">\n            <Button onClick={() => this.fetchSearchTopstories(searchTerm, page + 1)}>\n              More\n            </Button>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\nexport { Button, Search, Table, };\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nif (module.hot) {\n    module.hot.accept()\n}\n"],"sourceRoot":""}